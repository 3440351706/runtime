parameters:
  buildConfig: ''
  archType: 'wasm'
  osGroup: 'Browser'
  osSubgroup: ''
  container: ''
  testGroup: ''
  crossrootfsDir: ''
  readyToRun: false
  liveLibrariesBuildConfig: ''
  crossgen2: false
  compositeBuildMode: false
  helixQueues: ''
  stagedBuild: false
  displayNameArgs: ''
  runInUnloadableContext: false
  runtimeVariant: ''
  variables: {}
  pool: ''
  runtimeFlavor: 'mono'
  runtimeFlavorDisplayName: 'Mono'
  dependsOn: []
  #arcade-specific parameters
  condition: ''
  continueOnError: false
  displayName: ''
  timeoutInMinutes: ''
  enableMicrobuild: ''
  gatherAssetManifests: false


steps:
  - script: $(Build.SourcesDirectory)/src/coreclr/build-test$(scriptExt) -skipnative  -skipstressdependencies -excludemonofailures os Browser wasm
    displayName: Build Tests

  #  Send tests to Helix
  - template: /eng/pipelines/common/templates/runtimes/send-to-helix-step.yml
    parameters:
      displayName: Send tests to Helix
      ${{ if eq(parameters.buildConfig, 'debug') }}:
        buildConfig: 'Debug'
      ${{ if eq(parameters.buildConfig, 'release') }}:
        buildConfig: 'Release'
      ${{ if eq(parameters.buildConfig, 'checked') }}:
        buildConfig: 'Checked'
      archType: ${{ parameters.archType }}
      osGroup: ${{ parameters.osGroup }}
      osSubgroup: ${{ parameters.osSubgroup}}
      coreClrRepoRoot: $(Build.SourcesDirectory)/src/coreclr
      runtimeFlavorDisplayName: ${{ parameters.runtimeFlavorDisplayName }}

      ${{ if eq(variables['System.TeamProject'], 'public') }}:
        creator: $(Build.DefinitionName)

        helixBuild: $(Build.BuildNumber)
        helixSource: $(_HelixSource)

        # REVIEW: not sure why "cli" is part of the names here. Leave it for the ones that already had it,
        # but don't add it to new ones.
        ${{ if eq(parameters.readyToRun, true) }}:
          helixType: 'test/functional/r2r/cli/'
        ${{ if ne(parameters.readyToRun, true) }}:
          helixType: 'test/functional/cli/'

        helixQueues: ${{ parameters.helixQueues }}

        # This tests whether an array is empty
        ${{ if eq(join('', parameters.helixQueues), '') }}:
          condition: false

        publishTestResults: true

        timeoutPerTestInMinutes: $(timeoutPerTestInMinutes)
        timeoutPerTestCollectionInMinutes: $(timeoutPerTestCollectionInMinutes)

        runCrossGen: ${{ and(eq(parameters.readyToRun, true), ne(parameters.crossgen2, true)) }}
        runCrossGen2: ${{ and(eq(parameters.readyToRun, true), eq(parameters.crossgen2, true)) }}
        compositeBuildMode: ${{ parameters.compositeBuildMode }}
        runInUnloadableContext: ${{ parameters.runInUnloadableContext }}

        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          # Access token variable for internal project from the
          # DotNet-HelixApi-Access variable group
          helixAccessToken: $(HelixApiAccessToken)

        helixProjectArguments: '$(coreClrRepoRoot)/tests/helixpublishwitharcade.proj'

        scenarios: normal